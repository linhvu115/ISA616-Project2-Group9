labs(title = "Job Function Distribution in Majors of the Top 100 Highest Salaries",
x = "Major",
y = "Count",
caption = "Data Source: FSB Survey Data") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "Set3")
# Filter the dataset to select the top 100 highest salaries
top_salaries <- data %>%
filter(!is.na(survey_salary)) %>%
arrange(desc(survey_salary)) %>%
head(100)
# Create a grouped bar chart for job function distribution within the top 100 highest salaries' majors
top_salaries %>%
group_by(major1) %>%
summarize(Count = n()) %>%
ggplot(aes(x = major1, y = Count)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Majors of the Top 100 Highest Salaries",
x = "Major",
y = "Count",
caption = "Data Source: FSB Survey Data") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "Set3")
data %>%
group_by(major1) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
arrange(desc(Average_Salary)) %>%
ggplot(aes(x = Average_Salary, y = reorder(major1, -Average_Salary))) +
geom_bar(stat = "identity", fill = "dodgerblue3") +
labs(title = "Average Salary by Major",
x = "Average Salary ($)",
y = "Major",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
data %>%
group_by(major1) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
filter(!is.na(Average_Salary) & Average_Salary > 0) %>%
arrange(desc(Average_Salary)) %>%
ggplot(aes(x = Average_Salary, y = reorder(major1, -Average_Salary))) +
geom_bar(stat = "identity", fill = "dodgerblue3") +
labs(title = "Average Salary by Major",
x = "Average Salary ($)",
y = "Major",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
data %>%
group_by(major1) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
filter(!is.na(Average_Salary) & Average_Salary > 0) %>%
arrange(Average_Salary) %>%
ggplot(aes(x = Average_Salary, y = reorder(major1, -Average_Salary))) +
geom_bar(stat = "identity", fill = "dodgerblue3") +
labs(title = "Average Salary by Major",
x = "Average Salary ($)",
y = "Major",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
data %>%
group_by(major1) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
filter(!is.na(Average_Salary) & Average_Salary > 0) %>%
arrange(desc(Average_Salary)) %>%
ggplot(aes(x = Average_Salary, y = reorder(major1, -Average_Salary))) +
geom_bar(stat = "identity", fill = "dodgerblue3") +
labs(title = "Average Salary by Major",
x = "Average Salary ($)",
y = "Major",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
data %>%
group_by(major1) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
filter(!is.na(Average_Salary) & Average_Salary > 0) %>%
arrange(desc(Average_Salary)) %>%
ggplot(aes(x = Average_Salary, y = reorder(major1, desc(Average_Salary)))) +
geom_bar(stat = "identity", fill = "dodgerblue3") +
labs(title = "Average Salary by Major",
x = "Average Salary ($)",
y = "Major",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
data %>%
group_by(major1) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
filter(!is.na(Average_Salary) & Average_Salary > 0) %>%
arrange(desc(Average_Salary)) %>%
ggplot(aes(x = Average_Salary, y = major1)) +
geom_bar(stat = "identity", fill = "dodgerblue3") +
labs(title = "Average Salary by Major",
x = "Average Salary ($)",
y = "Major",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
data2 %>%
ggplot(aes(x = avg_salary, y = major1)) +
geom_bar(stat = "identity", fill = "dodgerblue3") +
labs(title = "Average Salary by Major",
x = "Average Salary ($)",
y = "Major",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
data2 %>%
filter(!is.na(avg_salary) & avg_salary > 0) %>%
ggplot(aes(x = reorder(major1, student_count), y = student_count)) +
geom_bar(stat = "identity", fill = "dodgerblue3") +
labs(title = "Student Distribution by Major",
x = "Student Count",
y = "Major",
caption = "Data Source: FSB Survey Data") +
theme_minimal() +
theme(axis.text.y = element_text(hjust = 1))
data2 %>%
filter(!is.na(avg_salary) & avg_salary > 0) %>%
ggplot(aes(x = reorder(major1, student_count), y = student_count)) +
geom_bar(stat = "identity", fill = "dodgerblue3") +
labs(title = "Student Distribution by Major",
x = "Student Count",
y = "Major",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
# Filter out majors with null or 0 average salary
data %>%
group_by(major1) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
filter(!is.na(Average_Salary) & Average_Salary > 0) %>%
arrange(desc(Average_Salary)) %>%
ggplot(aes(x = Average_Salary, y = reorder(major1, -Average_Salary))) +
geom_bar(stat = "identity", fill = "dodgerblue3") +
labs(title = "Average Salary by Major",
x = "Average Salary ($)",
y = "Major",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
data %>%
group_by(major1) %>%
summarize(avg_salary = mean(survey_salary, na.rm = TRUE)) %>%
filter(!is.na(avg_salary) & avg_salary > 0) %>%
arrange(desc(avg_salary)) %>%
ggplot(aes(x = avg_salary, y = reorder(major1, -avg_salary))) +
geom_bar(stat = "identity", fill = "dodgerblue3") +
labs(title = "Average Salary by Major",
x = "Average Salary ($)",
y = "Major",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
salary_changes <- filtered_data %>%
group_by(major1, year.x) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
arrange(major1)
salary_changes <- data %>%
group_by(major1, year.x) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
arrange(major1)
ggplot(salary_changes, aes(x = year.x, y = Average_Salary, group = major1, color = major1)) +
geom_line() +
labs(title = "Average Salary Changes by Major (2019-2021)",
x = "Year",
y = "Average Salary ($)",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
salary_changes <- data %>%
group_by(major1, year.x) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
arrange(major1)
# Create a line plot to visualize changes in salary by major from 2019 to 2021
ggplot(salary_changes, aes(x = year.x, y = Average_Salary, group = major1, color = major1)) +
geom_line() +
geom_point(size = 2) +
labs(title = "Average Salary Changes by Major (2019-2021)",
x = "Year",
y = "Average Salary ($)",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
salary_changes_5 <- data %>%
group_by(major1, year.x) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
top_n(5, Average_Salary) %>%
arrange(major1)
salary_5 <- data %>%
group_by(major1, year.x) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
top_n(5, Average_Salary) %>%
arrange(major1)
# Select the top 5 majors with the highest average salary
top5_majors <- data %>%
group_by(major1) %>%
summarize(Average_Salary = max(Average_Salary, na.rm = TRUE)) %>%
top_n(5, Average_Salary) %>%
pull(major1)
salary_5 <- data %>%
group_by(major1, year.x) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
top_n(5, Average_Salary)
salary_5
# Select the top 5 majors with the highest average salary
salary_5 <- data %>%
group_by(major1) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
top_n(5, Average_Salary)
salary_5
salary_5_changes <- data %>%
group_by(major1, year.x) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
filter(major1 %in% top5_majors)
# Select the top 5 majors with the highest average salary
major_5 <- data %>%
group_by(major1) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
top_n(5, Average_Salary) %>%
pull(major1)
salary_5_changes <- data %>%
group_by(major1, year.x) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
filter(major1 %in% major_5)
salary_5_changes
# Create a line plot to visualize changes in salary by major from 2019 to 2021
ggplot(salary_5_changes, aes(x = year.x, y = Average_Salary, group = major1, color = major1)) +
geom_line() +
geom_point(size = 2) +
labs(title = "Average Salary Changes by Major (2019-2021)",
x = "Year",
y = "Average Salary ($)",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
# Select the top 5 majors with the highest average salary
major_5 <- data %>%
group_by(major1) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
top_n(5, Average_Salary) %>%
pull(major1)
salary_5_changes <- data %>%
group_by(major1, year.x) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
filter(major1 %in% major_5)
# Create a line plot to visualize changes in salary by major from 2019 to 2021
ggplot(salary_5_changes, aes(x = year.x, y = Average_Salary, group = major1, color = major1)) +
geom_line() +
geom_point(size = 2) +
labs(title = "Average Salary Changes by Top 5 Major with Highest Average Salary (2019-2021)",
x = "Year",
y = "Average Salary ($)",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
# Select the top 5 majors with the highest average salary
major_5 <- data %>%
group_by(major1) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
top_n(5, Average_Salary) %>%
pull(major1)
salary_5_changes <- data %>%
group_by(major1, year.x) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
filter(major1 %in% major_5)
# Create a line plot to visualize changes in salary by major from 2019 to 2021
ggplot(salary_5_changes, aes(x = year.x, y = Average_Salary, group = major1, color = major1)) +
geom_line() +
geom_point(size = 2) +
labs(title = "Average Salary Changes by Top 5 Major with Highest Average Salary",
x = "Year",
y = "Average Salary ($)",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
# Select the top 5 majors with the highest average salary
major_5 <- data %>%
group_by(major1) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
top_n(5, Average_Salary) %>%
pull(major1)
salary_5_changes <- data %>%
group_by(major1, year.x) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
filter(major1 %in% major_5)
# Create a line plot to visualize changes in salary by major from 2019 to 2021
ggplot(salary_5_changes, aes(x = year.x, y = Average_Salary, group = major1, color = major1)) +
geom_line() +
geom_point(size = 2) +
labs(x = "Year",
y = "Average Salary ($)",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE,message=FALSE,warning=FALSE)
# package initialization
rm(list = ls()) # clear global environment
graphics.off() # close all graphics
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(DataExplorer,tidyverse,readxl,zoo,stargazer,kableExtra,skimr,plotly,ggpubr,vtable,tm)
data = readRDS(file = "FSB_BI_Survey_2019_2021.rds")
head(data)
s <- skim(data)
summary(s)
s %>% yank("character")
s %>% yank("factor")
s %>% yank("numeric")
data <- data[,c(1,2,3,19,20,21,22,23,25,28,30,31,34,37,41,42)]
# Clean the offer data
# unique(data$survey_offers)
data$survey_offers[is.na(data$survey_offers)] <- "N/A"
data$survey_offers[data$survey_offers == "na"] <- "N/A"
# Clean the internship data
# unique(data$survey_internships)
data$survey_internships[is.na(data$survey_internships)] <- "N/A"
data$survey_internships[data$survey_internships == "RPT"] <- "N/A" # do not know the meaning of RPT
# head(unique(data$survey_state), 20)
# Convert to lowercase and remove white spaces
data$survey_state <- tolower(trimws(data$survey_state))
# Remove non-alphabetic characters
data$survey_state <- gsub("[^a-z]", "", data$survey_state)
# Remove 'usa', 'america', 'unitedstates', 'us', 'unitedstatesofamerica'
data$survey_state <- gsub("usa|america|unitedstates|us|unitedstatesofamerica", "", data$survey_state)
# Replace full state names with abbreviations
state_abb <- c(
"al", "ak", "az", "ar", "ca", "co", "ct", "de", "fl", "ga", "hi", "id", "il", "in", "ia", "ks", "ky",
"la", "me", "md", "ma", "mi", "mn", "ms", "mo", "mt", "ne", "nv", "nh", "nj", "nm", "ny", "nc", "nd",
"oh", "ok", "or", "pa", "ri", "sc", "sd", "tn", "tx", "ut", "vt", "va", "wa", "wv", "wi", "wy", "dc"
)
state_full <- c(
"alabama", "alaska", "arizona", "arkansas", "california",
"colorado", "connecticut", "delaware", "florida", "georgia",
"hawaii", "idaho", "illinois", "indiana", "iowa", "kansas",
"kentucky", "louisiana", "maine", "maryland", "massachusetts",
"michigan", "minnesota", "mississippi", "missouri", "montana",
"nebraska", "nevada", "newhampshire", "newjersey", "newmexico",
"newyork", "northcarolina", "northdakota", "ohio", "oklahoma",
"oregon", "pennsylvania", "rhodeisland", "southcarolina",
"southdakota", "tennessee", "texas", "utah", "vermont",
"virginia", "washington", "westvirginia", "wisconsin", "wyoming",
"districtofcolumbia"
)
# Create a mapping dictionary
state_mapping <- setNames(state_abb, state_full)
# Map state names using the mapping dictionary and convert to uppercase
data$survey_state <- ifelse(data$survey_state %in% state_full,
state_mapping[data$survey_state],
data$survey_state)
# Convert to uppercase
data$survey_state <- toupper(data$survey_state)
# Adding fujianprovince and zhejiang province to china
data$survey_state[data$survey_state == "FUJIANPROVINCE" | data$survey_state == "ZHEJIANGPROVINCE"] <- "CHINA"
# Standardizing fields with misspells or alternative names
data$survey_state[data$survey_state == "MICHIGANDETROIT"] <- "MI"
data$survey_state[data$survey_state == "WASHINGTONDC"] <- "WA"
data$survey_state[data$survey_state == "OHIOTHE"] <- "OH"
data$survey_state[data$survey_state == "MASSACHETTS"] <- "MA"
data$survey_state[data$survey_state == "VIRGINIAVA"] <- "VA"
# Replacing blanks, na and miscellaneous values with "NOT AVAILABLE"
data$survey_state[is.na(data$survey_state)] <- "N/A"
data$survey_state[data$survey_state == ""] <- "N/A"
data$survey_state[data$survey_state == "NA"] <- "N/A"
data$survey_state[data$survey_state == "TBA" | data$survey_state == "TBD"] <- "N/A"
# unique(data$survey_state)
# head(unique(data$survey_company), 20)
# Replacing company names that have JP Morgan or some variations with JP Morgan Chase
data$survey_company[data$survey_company == "JP Morgan" | data$survey_company == "J.P Morgan" | data$survey_company == "J.P. Morgan" | data$survey_company == "J.P. Morgan U.S. Private Bank" | data$survey_company == "JP Morgan and Chase"  ] <- "JPMorgan Chase"
data$survey_company[data$survey_company == "JPMorgan Chase & Co."] <- "JPMorgan Chase"
data$survey_company[data$survey_company == "JPMorgan Chase"] <- "JPMorgan Chase"
# Replacing company names with alternative spelling name for EY
data$survey_company[data$survey_company == "Ernst & Young"] <- "EY"
data$survey_company[data$survey_company == "Ernst and Young"] <- "EY"
# Replacing company names with alternative spelling name for Textron
data$survey_company[data$survey_company == "Textron Aviation"] <- "Textron"
data$survey_company[data$survey_company == "Textron Systems"] <- "Textron"
data$survey_company[data$survey_company == "Textron Specialized Vehicles"] <- "Textron"
# Replacing company names with alternative spelling name for Coyote Logistics
data$survey_company[data$survey_company == "CoyoteLogisitcs"] <- "Coyote Logisitcs"
data$survey_company[data$survey_company == "Coyote"] <- "Coyote Logisitcs"
# Replacing company names with alternative spelling name for Deloitte
data$survey_company[data$survey_company == "Deloitte Consulting"] <- "Deloitte"
data$survey_company[data$survey_company == "Deloitte LLP"]	<- "Deloitte"
data$survey_company[data$survey_company == "Deloitte Tax"]	<- "Deloitte"
data$survey_company[data$survey_company == "Deloitte, China"] <- "Deloitte"
# Replacing company names with alternative spelling name for PNC
data$survey_company[data$survey_company == "PNC Bank"] <- "PNC"
data$survey_company[data$survey_company == "PNC Financial Services"] <- "PNC"
# Replacing company names with alternative spelling name for Grainger
data$survey_company[data$survey_company == "WW Grainger"] <- "W.W. Grainger"
data$survey_company[data$survey_company == "Grainger"] <- "W.W. Grainger"
# Replacing company names with alternative spelling name for Oracle
data$survey_company[data$survey_company == "Oracle Netsuite"] <- "Oracle"
data$survey_company[data$survey_company == "Oracle NetSuite"] <- "Oracle"
data$survey_company[data$survey_company == "Oracle - Netsuite"] <- "Oracle"
# Replacing other company names with alternative spelling name
data$survey_company[data$survey_company ==  "PWC"] <- "PwC"
data$survey_company[data$survey_company == "Brown Gibbons Lang & Co."] <- "Brown Gibbons Lang & Company"
data$survey_company[data$survey_company == "Abercrombie & Fitch"] <- "Abercrombie"
data$survey_company[data$survey_company == "The Cincinnati Insurance Company"] <- "The Cincinnati Insurance Companies"
data$survey_company[data$survey_company == "Cincinnati Insurance"] <- "The Cincinnati Insurance Companies"
data$survey_company[data$survey_company == "Cincinnati Insurance Company"] <- "The Cincinnati Insurance Companies"
data$survey_company[data$survey_company == "Terillium"] <- "Terrilium"
data$survey_company[data$survey_company == "84.51"] <- "84.51º"
data$survey_company[data$survey_company == "Abbott Nutrition"] <- "Abbott"
data$survey_company[data$survey_company == "CIBC US"] <- "CIBC"
data$survey_company[data$survey_company == "Oppenheimer & Co. Inc."] <- "Oppenheimer & Co Inc."
# Replacing blanks, na and miscellaneous values with "NOT AVAILABLE"
data$survey_company[is.na(data$survey_company)] <- "N/A"
data$survey_company[data$survey_company == ""] <- "N/A"
data$survey_company[data$survey_company == "na"] <- "N/A"
data$survey_company[data$survey_company == "N/A"] <- "N/A"
data$survey_company[data$survey_company == "Not Yet"] <- "N/A"
# length(unique(data$survey_company))
# 881
# head(unique(data$survey_company), 20)
# unique(data$survey_gradprogram)
data$survey_gradprogram[is.na(data$survey_gradprogram)] <- "N/A"
data$survey_gradprogram[data$survey_gradprogram == "N/a"] <- "N/A"
# unique(data$survey_gradschool)
data$survey_gradschool[is.na(data$survey_gradschool)] <- "N/A"
data$survey_gradschool[data$survey_gradschool == "N/a"] <- "N/A"
non_null_grad <- data %>%
filter(survey_gradschool != "N/A" | survey_gradschool != "N/A")
non_null_grad %>% summarize(
no_offers = mean(survey_offers == 'N/A' | survey_offers == 0),
no_company = mean(survey_company == 'N/A'),
no_intern = mean(survey_internships == 'N/A' | survey_internships == 0)
)
data <- data %>%
filter(survey_gradprogram == 'N/A' & survey_gradschool == 'N/A') %>%
select(-survey_gradprogram, -survey_gradschool)
s <- skim(data)
summary(s)
s %>% yank("character")
s %>% yank("factor")
s %>% yank("numeric")
head(data)
data %>%
group_by(major1) %>%
summarise(survey_internships)
data %>%
group_by(major1) %>%
summarise(survey_internships = count(survey_internships))
data %>%
group_by(major1) %>%
summarise(survey_internships = count(as.numeric(survey_internships)))
data1 = data %>%
mutate(survey_internships = as.numeric(survey_internships))
data1 = data %>%
mutate(survey_internships = as.numeric(survey_internships))
data1$survey_internships
data1 = data %>%
mutate(survey_internships = as.numeric(survey_internships)) %>%
mutate(survey_offers = as.numeric(survey_offers))
data_major %>%
group_by(major1) %>%
summarise(count_internship = count(survey_internships))
data1 = data %>%
mutate(survey_internships = as.numeric(survey_internships)) %>%
mutate(survey_offers = as.numeric(survey_offers))
data_major = data1 %>%
group_by(major1) %>%
summarise(count_internship = count(survey_internships))
data1 = data %>%
mutate(survey_internships = as.numeric(survey_internships)) %>%
mutate(survey_offers = as.numeric(survey_offers))
data_major = data1 %>%
group_by(major1, survey_internships, survey_offers) %>%
summarise(count_internship = n())
data1 = data %>%
mutate(survey_internships = as.numeric(survey_internships)) %>%
mutate(survey_offers = as.numeric(survey_offers))
data_major = data1 %>%
group_by(major1, survey_internships, survey_offers) %>%
summarise(count_internship = n())
data_major
data1 = data %>%
mutate(survey_internships = as.numeric(survey_internships)) %>%
mutate(survey_offers = as.numeric(survey_offers))
data_major = data1 %>%
group_by(major1) %>%
summarise(count_internship = n(survey_internships))
data1 = data %>%
mutate(survey_internships = as.numeric(survey_internships)) %>%
mutate(survey_offers = as.numeric(survey_offers))
data_major = data1 %>%
group_by(major1) %>%
count(survey_internships, sort = TRUE)
data_major
data1 = data %>%
mutate(survey_internships = as.numeric(survey_internships)) %>%
mutate(survey_offers = as.numeric(survey_offers))
data_major = data1 %>%
group_by(major1) %>%
count(survey_internships, survey_offers, sort = TRUE)
data_major
data %>%
count(survey_internships, survey_offers, sort = TRUE)
data1 = data %>%
mutate(survey_internships = as.numeric(survey_internships)) %>%
mutate(survey_offers = as.numeric(survey_offers)) %>%
drop_na()
data_major = data1 %>%
group_by(major1) %>%
count(survey_internships, survey_offers, sort = TRUE)
data_major
data1 = data %>%
mutate(survey_internships = as.numeric(survey_internships)) %>%
mutate(survey_offers = as.numeric(survey_offers)) %>%
drop_na()
data_major = data1 %>%
group_by(major1, minor1, minor2) %>%
count(survey_internships, survey_offers, sort = TRUE)
data_major
data %>%
count(survey_salary, sort = TRUE)
data %>%
drop_na %>%
count(survey_salary, sort = TRUE)
data %>%
drop_na %>%
count(survey_salary, sort = TRUE)
min(data$survey_salary)
