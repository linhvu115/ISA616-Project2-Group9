options = list(dom = 'Bfrtip',
buttons = c('copy','csv','excel')
))
data2 = data %>%
group_by(major1) %>%
summarize(
Student_Count = n(),
Company_Count = n_distinct(survey_company),
Job_Functions = n_distinct(survey_job_function),
Average_Salary = mean(salary, na.rm = TRUE)
) %>%
arrange(major1)
head(data)
data2 = data %>%
group_by(major1) %>%
summarize(
Student_Count = n(),
Company_Count = n_distinct(survey_company),
Job_Functions = n_distinct(survey_deptfunc),
Average_Salary = mean(salary, na.rm = TRUE)
) %>%
arrange(major1)
data2 = data %>%
group_by(major1) %>%
summarize(
Student_Count = n(),
Company_Count = n_distinct(survey_company),
Job_Functions = n_distinct(survey_deptfunc),
Average_Salary = mean(survey_salary, na.rm = TRUE)
) %>%
arrange(major1)
datatable(data2, rownames = F, extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = c('copy','csv','excel')
))
data2 = data %>%
group_by(major1) %>%
summarize(
Student_Count = n(),
Average_Salary = mean(survey_salary, na.rm = TRUE)
) %>%
arrange(major1)
datatable(data2, rownames = F, extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = c('copy','csv','excel')
))
data2 = data %>%
group_by(major1) %>%
summarize(
Student_Count = n(),
Average_Salary = round(mean(survey_salary, na.rm = TRUE), 2)
) %>%
arrange(major1)
datatable(data2, rownames = F, extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = c('copy','csv','excel')
))
data2 = data %>%
group_by(major1) %>%
summarize(
Student_Count = n(),
Average_Salary = dollar(mean(survey_salary, na.rm = TRUE))
) %>%
arrange(major1)
knitr::opts_chunk$set(echo = TRUE,message=FALSE,warning=FALSE)
#package intialization
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(tidyverse, #for data manipulation
plotly, #for interactive plots
flexdashboard, #to make a dashboard
fontawesome, #for icons
DT #for better tables
scales #for displaying numbers in currency format
knitr::opts_chunk$set(echo = TRUE,message=FALSE,warning=FALSE)
#package intialization
if(require(pacman)==FALSE) install.packages("pacman")
pacman::p_load(tidyverse, #for data manipulation
plotly, #for interactive plots
flexdashboard, #to make a dashboard
fontawesome, #for icons
DT, #for better tables
scales #for displaying numbers in currency format
)
#read in data
data = readRDS("cleaned_FSB_survey_data.RDS")
data2 = data %>%
group_by(major1) %>%
summarize(
Student_Count = n(),
Average_Salary = dollar(mean(survey_salary, na.rm = TRUE))
) %>%
arrange(major1)
datatable(data2, rownames = F, extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = c('copy','csv','excel')
))
data2 = data %>%
group_by(major1) %>%
summarize(
count = n(),
avg_salary = dollar(mean(survey_salary, na.rm = TRUE))
) %>%
arrange(major1, -avg_salary)
data2 = data %>%
group_by(major1) %>%
summarize(
count = n(),
avg_salary = dollar(mean(survey_salary, na.rm = TRUE))
) %>%
arrange(major1, avg_salary)
datatable(data2, rownames = F, extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = c('copy','csv','excel')
))
data2 = data %>%
group_by(major1) %>%
summarize(
count = n(),
avg_salary = dollar(mean(survey_salary, na.rm = TRUE))
) %>%
arrange(avg_salary)
datatable(data2, rownames = F, extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = c('copy','csv','excel')
))
data2 = data %>%
group_by(major1) %>%
summarize(
count = n(),
avg_salary = dollar(mean(survey_salary, na.rm = TRUE))
) %>%
arrange(-avg_salary)
data2 = data %>%
group_by(major1) %>%
summarize(
count = n(),
avg_salary = dollar(mean(survey_salary, na.rm = TRUE))
) %>%
arrange(desc(avg_salary))
datatable(data2, rownames = F, extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = c('copy','csv','excel')
))
data2 = data %>%
group_by(major1) %>%
summarize(
student_count = n(),
avg_salary = dollar(mean(survey_salary, na.rm = TRUE))
) %>%
arrange(desc(avg_salary))
datatable(data2, rownames = F, extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = c('copy','csv','excel')
))
data2 = data %>%
group_by(major1) %>%
summarize(
student_count = n(),
avg_salary = dollar(mean(survey_salary, na.rm = TRUE))
) %>%
arrange(desc(avg_salary))
datatable(data2, rownames = F, extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = c('copy','csv','excel')
))
data2 = data %>%
group_by(major1) %>%
summarize(
student_count = n(),
avg_salary = dollar(mean(survey_salary, na.rm = TRUE))
) %>%
arrange(major1)
datatable(data2, rownames = F, extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = c('copy','csv','excel')
))
# Create a bar chart for average salary by major
data %>%
group_by(major1) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
arrange(desc(Average_Salary)) %>%
ggplot(aes(x = reorder(major1, -Average_Salary), y = Average_Salary)) +
geom_bar(stat = "identity", fill = "dodgerblue3") +
labs(title = "Average Salary by Major",
x = "Major",
y = "Average Salary ($)",
caption = "Data Source: FSB Survey Data") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Create a grouped bar chart for job function distribution by major
data %>%
group_by(major1, survey_deptfunc) %>%
summarize(Count = n()) %>%
ggplot(aes(x = major1, y = Count, fill = survey_deptfunc)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Job Function Distribution by Major",
x = "Major",
y = "Count",
caption = "Data Source: FSB Survey Data") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "Set3")
top_salaries <- data %>%
filter(!is.na(survey_salary)) %>%
arrange(desc(survey_salary)) %>%
head(100)
top_salaries %>%
group_by(major1, survey_deptfunc) %>%
summarize(Count = n()) %>%
ggplot(aes(x = major1, y = Count, fill = survey_deptfunc)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Job Function Distribution in Majors of the Top 100 Highest Salaries",
x = "Major",
y = "Count",
caption = "Data Source: FSB Survey Data") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "Set3")
# Filter the dataset to select the top 100 highest salaries
top_salaries <- data %>%
filter(!is.na(survey_salary)) %>%
arrange(desc(survey_salary)) %>%
head(100)
# Create a grouped bar chart for job function distribution within the top 100 highest salaries' majors
top_salaries %>%
group_by(major1, survey_deptfunc) %>%
summarize(Count = n()) %>%
ggplot(aes(x = major1, y = Count, fill = survey_deptfunc)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Job Function Distribution in Majors of the Top 100 Highest Salaries",
x = "Major",
y = "Count",
caption = "Data Source: FSB Survey Data") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "Set3")
# Filter the dataset to select the top 100 highest salaries
top_salaries <- data %>%
filter(!is.na(survey_salary)) %>%
arrange(desc(survey_salary)) %>%
head(100)
# Create a grouped bar chart for job function distribution within the top 100 highest salaries' majors
top_salaries %>%
group_by(major1) %>%
summarize(Count = n()) %>%
ggplot(aes(x = major1, y = Count)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Majors of the Top 100 Highest Salaries",
x = "Major",
y = "Count",
caption = "Data Source: FSB Survey Data") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "Set3")
data %>%
group_by(major1) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
arrange(desc(Average_Salary)) %>%
ggplot(aes(x = Average_Salary, y = reorder(major1, -Average_Salary))) +
geom_bar(stat = "identity", fill = "dodgerblue3") +
labs(title = "Average Salary by Major",
x = "Average Salary ($)",
y = "Major",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
data %>%
group_by(major1) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
filter(!is.na(Average_Salary) & Average_Salary > 0) %>%
arrange(desc(Average_Salary)) %>%
ggplot(aes(x = Average_Salary, y = reorder(major1, -Average_Salary))) +
geom_bar(stat = "identity", fill = "dodgerblue3") +
labs(title = "Average Salary by Major",
x = "Average Salary ($)",
y = "Major",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
data %>%
group_by(major1) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
filter(!is.na(Average_Salary) & Average_Salary > 0) %>%
arrange(Average_Salary) %>%
ggplot(aes(x = Average_Salary, y = reorder(major1, -Average_Salary))) +
geom_bar(stat = "identity", fill = "dodgerblue3") +
labs(title = "Average Salary by Major",
x = "Average Salary ($)",
y = "Major",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
data %>%
group_by(major1) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
filter(!is.na(Average_Salary) & Average_Salary > 0) %>%
arrange(desc(Average_Salary)) %>%
ggplot(aes(x = Average_Salary, y = reorder(major1, -Average_Salary))) +
geom_bar(stat = "identity", fill = "dodgerblue3") +
labs(title = "Average Salary by Major",
x = "Average Salary ($)",
y = "Major",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
data %>%
group_by(major1) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
filter(!is.na(Average_Salary) & Average_Salary > 0) %>%
arrange(desc(Average_Salary)) %>%
ggplot(aes(x = Average_Salary, y = reorder(major1, desc(Average_Salary)))) +
geom_bar(stat = "identity", fill = "dodgerblue3") +
labs(title = "Average Salary by Major",
x = "Average Salary ($)",
y = "Major",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
data %>%
group_by(major1) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
filter(!is.na(Average_Salary) & Average_Salary > 0) %>%
arrange(desc(Average_Salary)) %>%
ggplot(aes(x = Average_Salary, y = major1)) +
geom_bar(stat = "identity", fill = "dodgerblue3") +
labs(title = "Average Salary by Major",
x = "Average Salary ($)",
y = "Major",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
data2 %>%
ggplot(aes(x = avg_salary, y = major1)) +
geom_bar(stat = "identity", fill = "dodgerblue3") +
labs(title = "Average Salary by Major",
x = "Average Salary ($)",
y = "Major",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
data2 %>%
filter(!is.na(avg_salary) & avg_salary > 0) %>%
ggplot(aes(x = reorder(major1, student_count), y = student_count)) +
geom_bar(stat = "identity", fill = "dodgerblue3") +
labs(title = "Student Distribution by Major",
x = "Student Count",
y = "Major",
caption = "Data Source: FSB Survey Data") +
theme_minimal() +
theme(axis.text.y = element_text(hjust = 1))
data2 %>%
filter(!is.na(avg_salary) & avg_salary > 0) %>%
ggplot(aes(x = reorder(major1, student_count), y = student_count)) +
geom_bar(stat = "identity", fill = "dodgerblue3") +
labs(title = "Student Distribution by Major",
x = "Student Count",
y = "Major",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
# Filter out majors with null or 0 average salary
data %>%
group_by(major1) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
filter(!is.na(Average_Salary) & Average_Salary > 0) %>%
arrange(desc(Average_Salary)) %>%
ggplot(aes(x = Average_Salary, y = reorder(major1, -Average_Salary))) +
geom_bar(stat = "identity", fill = "dodgerblue3") +
labs(title = "Average Salary by Major",
x = "Average Salary ($)",
y = "Major",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
data %>%
group_by(major1) %>%
summarize(avg_salary = mean(survey_salary, na.rm = TRUE)) %>%
filter(!is.na(avg_salary) & avg_salary > 0) %>%
arrange(desc(avg_salary)) %>%
ggplot(aes(x = avg_salary, y = reorder(major1, -avg_salary))) +
geom_bar(stat = "identity", fill = "dodgerblue3") +
labs(title = "Average Salary by Major",
x = "Average Salary ($)",
y = "Major",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
salary_changes <- filtered_data %>%
group_by(major1, year.x) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
arrange(major1)
salary_changes <- data %>%
group_by(major1, year.x) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
arrange(major1)
ggplot(salary_changes, aes(x = year.x, y = Average_Salary, group = major1, color = major1)) +
geom_line() +
labs(title = "Average Salary Changes by Major (2019-2021)",
x = "Year",
y = "Average Salary ($)",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
salary_changes <- data %>%
group_by(major1, year.x) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
arrange(major1)
# Create a line plot to visualize changes in salary by major from 2019 to 2021
ggplot(salary_changes, aes(x = year.x, y = Average_Salary, group = major1, color = major1)) +
geom_line() +
geom_point(size = 2) +
labs(title = "Average Salary Changes by Major (2019-2021)",
x = "Year",
y = "Average Salary ($)",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
salary_changes_5 <- data %>%
group_by(major1, year.x) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
top_n(5, Average_Salary) %>%
arrange(major1)
salary_5 <- data %>%
group_by(major1, year.x) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
top_n(5, Average_Salary) %>%
arrange(major1)
# Select the top 5 majors with the highest average salary
top5_majors <- data %>%
group_by(major1) %>%
summarize(Average_Salary = max(Average_Salary, na.rm = TRUE)) %>%
top_n(5, Average_Salary) %>%
pull(major1)
salary_5 <- data %>%
group_by(major1, year.x) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
top_n(5, Average_Salary)
salary_5
# Select the top 5 majors with the highest average salary
salary_5 <- data %>%
group_by(major1) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
top_n(5, Average_Salary)
salary_5
salary_5_changes <- data %>%
group_by(major1, year.x) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
filter(major1 %in% top5_majors)
# Select the top 5 majors with the highest average salary
major_5 <- data %>%
group_by(major1) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
top_n(5, Average_Salary) %>%
pull(major1)
salary_5_changes <- data %>%
group_by(major1, year.x) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
filter(major1 %in% major_5)
salary_5_changes
# Create a line plot to visualize changes in salary by major from 2019 to 2021
ggplot(salary_5_changes, aes(x = year.x, y = Average_Salary, group = major1, color = major1)) +
geom_line() +
geom_point(size = 2) +
labs(title = "Average Salary Changes by Major (2019-2021)",
x = "Year",
y = "Average Salary ($)",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
# Select the top 5 majors with the highest average salary
major_5 <- data %>%
group_by(major1) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
top_n(5, Average_Salary) %>%
pull(major1)
salary_5_changes <- data %>%
group_by(major1, year.x) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
filter(major1 %in% major_5)
# Create a line plot to visualize changes in salary by major from 2019 to 2021
ggplot(salary_5_changes, aes(x = year.x, y = Average_Salary, group = major1, color = major1)) +
geom_line() +
geom_point(size = 2) +
labs(title = "Average Salary Changes by Top 5 Major with Highest Average Salary (2019-2021)",
x = "Year",
y = "Average Salary ($)",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
# Select the top 5 majors with the highest average salary
major_5 <- data %>%
group_by(major1) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
top_n(5, Average_Salary) %>%
pull(major1)
salary_5_changes <- data %>%
group_by(major1, year.x) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
filter(major1 %in% major_5)
# Create a line plot to visualize changes in salary by major from 2019 to 2021
ggplot(salary_5_changes, aes(x = year.x, y = Average_Salary, group = major1, color = major1)) +
geom_line() +
geom_point(size = 2) +
labs(title = "Average Salary Changes by Top 5 Major with Highest Average Salary",
x = "Year",
y = "Average Salary ($)",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
# Select the top 5 majors with the highest average salary
major_5 <- data %>%
group_by(major1) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
top_n(5, Average_Salary) %>%
pull(major1)
salary_5_changes <- data %>%
group_by(major1, year.x) %>%
summarize(Average_Salary = mean(survey_salary, na.rm = TRUE)) %>%
filter(major1 %in% major_5)
# Create a line plot to visualize changes in salary by major from 2019 to 2021
ggplot(salary_5_changes, aes(x = year.x, y = Average_Salary, group = major1, color = major1)) +
geom_line() +
geom_point(size = 2) +
labs(x = "Year",
y = "Average Salary ($)",
caption = "Data Source: FSB Survey Data") +
theme_minimal()
